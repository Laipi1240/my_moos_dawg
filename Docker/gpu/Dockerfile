FROM nvidia/cuda:11.8.0-cudnn8-devel-ubuntu20.04

ARG DEBIAN_FRONTEND=noninteractive \
    GAZ=gazebo11
    
ENV ROS_DISTRO=noetic \
    SHELL=/bin/bash \
    NB_USER=moos-dawg \
    NB_UID=1000

RUN echo 'Etc/UTC' > /etc/timezone && \
    ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime

###################################### user #####################################
RUN adduser --disabled-password \
    --gecos "Default user" \
    --uid ${NB_UID} \
    ${NB_USER} 

RUN echo "root:root" | chpasswd \
    && echo "${NB_USER}:111111" | chpasswd

ENV HOME=/home/${NB_USER}

##################################### basic tools #####################################
RUN apt-get -o Acquire::ForceIPv4=true update && apt-get -yq dist-upgrade \
    && apt-get -o Acquire::ForceIPv4=true install -yq --no-install-recommends \
    curl \
    vim \
    wget \
    sudo \
    cmake \
    gedit \
    gnupg2 \
    gtk+-3.0 \
    locales \
    dirmngr \
    mercurial \
    net-tools \
    lsb-release \
    openssh-client \
    build-essential \
    libcanberra-gtk-module \
    libcanberra-gtk3-module \
    libpcap-dev \
    libusb-1.0 \
    tzdata \
    libglfw3-dev \
    libmetis-dev \
    python3-tk \
    software-properties-common \
    ruby \
    python3-pip \
    python3-setuptools \
    python3-numpy \
    python3-empy  \
    python3-opencv \
    python3-dbg \
    python3-venv \
    python3-dev \
    python3-tk \
    python3-yaml \
    libfltk1.3-dev \ 
    freeglut3-dev \ 
    libpng-dev \ 
    libjpeg-dev \
    libxft-dev \ 
    libxinerama-dev \ 
    libtiff5-dev \ 
    librapidxml-dev \
    netbase \ 
    fluid \
    xterm \
    scrot \
    g++ \
    subversion \
    libtiff-dev \
    espeak \
    qtbase5-dev \
    ifstat \
    iperf3 \
    && apt-get update && apt-get install -y git \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

###################################### ROS #####################################
RUN echo "deb http://packages.ros.org/ros/ubuntu focal main" > /etc/apt/sources.list.d/ros1-latest.list \
    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 \
    && apt-get update && apt-get install -y --no-install-recommends \
    ros-noetic-desktop-full=1.5.0-1* \
    && rm -rf /var/lib/apt/lists/*

    # install bootstrap tools
RUN apt-get -o Acquire::ForceIPv4=true update && apt-get -o Acquire::ForceIPv4=true install --no-install-recommends -y \
    ${GAZ} \
    lib${GAZ}-dev \
    ros-$ROS_DISTRO-desktop-full \
    ros-$ROS_DISTRO-rosbridge-suite \
    ros-$ROS_DISTRO-mavros \
    ros-$ROS_DISTRO-mavros-extras \
    ros-$ROS_DISTRO-octomap-* \
    ros-$ROS_DISTRO-gazebo-plugins \
    ros-$ROS_DISTRO-gazebo-ros \
    ros-$ROS_DISTRO-gazebo-ros-control \
    ros-$ROS_DISTRO-gazebo-ros-pkgs \
    ros-$ROS_DISTRO-effort-controllers \
    ros-$ROS_DISTRO-geographic-info \
    ros-$ROS_DISTRO-hector-gazebo-plugins \
    ros-$ROS_DISTRO-joint-state-controller \
    ros-$ROS_DISTRO-joint-state-publisher \
    ros-$ROS_DISTRO-joy \
    ros-$ROS_DISTRO-joy-teleop \
    ros-$ROS_DISTRO-kdl-parser-py \
    ros-$ROS_DISTRO-key-teleop \
    ros-$ROS_DISTRO-move-base \
    ros-$ROS_DISTRO-robot-localization \
    ros-$ROS_DISTRO-robot-state-publisher \
    ros-$ROS_DISTRO-rqt \
    ros-$ROS_DISTRO-rqt-common-plugins \
    ros-$ROS_DISTRO-rqt-robot-plugins \
    ros-$ROS_DISTRO-teleop-tools \
    ros-$ROS_DISTRO-teleop-twist-joy \
    ros-$ROS_DISTRO-teleop-twist-keyboard \
    ros-$ROS_DISTRO-tf2-geometry-msgs \
    ros-$ROS_DISTRO-tf2-tools \
    ros-$ROS_DISTRO-urdfdom-py \
    ros-$ROS_DISTRO-velodyne-gazebo-plugins \
    ros-$ROS_DISTRO-xacro \
    ros-$ROS_DISTRO-pointcloud-to-laserscan \
    ros-$ROS_DISTRO-spacenav-node \
    ros-$ROS_DISTRO-tf2-sensor-msgs \
    ros-$ROS_DISTRO-twist-mux \
    ros-$ROS_DISTRO-velodyne-simulator \
    ros-$ROS_DISTRO-soem \
    ros-$ROS_DISTRO-openslam-gmapping \
    ros-$ROS_DISTRO-geodesy \
    ros-$ROS_DISTRO-ddynamic-reconfigure \
    ros-$ROS_DISTRO-rviz-imu-plugin \
    python3-catkin-tools \
    python3-rosdep \
    python3-rosinstall \
    python3-rosinstall-generator \
    python3-wstool \
    python3-vcstool \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

####################################### pip3 ###########################################

RUN python3 -m pip install --upgrade pip \
    && pip3 install \
    matplotlib \
    pandas \
    pypozyx \
    requests \
    jupyter \
    jupyter_http_over_ws \
    rospkg \
    catkin-tools \
    scikit-image \
    scikit-learn \
    zerorpc \
    gdown \
    seaborn \
    pybind11-global \
    pyautogui \
    mkdocs \ 
    mkdocs-with-pdf \
    mkdocstrings \
    "mkdocstrings[python]" \
    mkdocs-material \
    pytest \
    flask \
    flask-socketio \
    virtualenv \
    nbdev \
    cython \
    image \
    Pillow \
    tensorboard \
    pygwidgets \
    swig

RUN apt update && apt install -y --no-install-recommends \
    python3-tk \
    && rm -rf /var/lib/apt/lists/* \
    && pip install \
        seaborn \
        dm-haiku==0.0.10

RUN pip3 install --ignore-installed PyYAML \
    && pip3 install \
    torch \
    torchaudio \
    torchvision \
    gymnasium \
    stable-baselines3 \
    openai==0.27.0 \
    trajectopy-core \
    huggingface-sb3 \
    huggingface_hub \
    transformers \
    datasets \
    hf_transfer \
    opencv-python-headless \
    timm


####################################### pyivp ###########################################

RUN cd ${HOME} && git clone https://github.com/ARG-NCTU/pyivp.git \
    && cd pyivp \
    && make -f moos-dawg.Makefile

###################################### MOOS #####################################
# RUN cd ${HOME} && svn co https://oceanai.mit.edu/svn/moos-ivp-aro/releases/moos-ivp-22.8 moos-ivp \
#     && cd moos-ivp \
#     && ./build.sh \
#     && echo 'export PATH=$PATH:~/moos-ivp/bin' >> ~/.bashrc
RUN echo 'export PATH=$PATH:~/moos-dawg-2024/svn-mirror/bin' >> ~/.bashrc \
    && echo 'export PATH=$PATH:~/moos-dawg-2024/arg-moos/bin' >> ~/.bashrc
####################################################################################

###################################### Langchain #####################################
RUN python3 -m pip install --upgrade pip \
    langchain langchain_core langchain_openai \
    pykalman

###################################### KEYBOARD_CONTROL #####################################
RUN python3 -m pip install --upgrade pip \
    pynput

###################################### ROSBRIDGE #####################################
RUN python3 -m pip install --upgrade pip \
    roslibpy

RUN sudo -H pip install --upgrade twisted \
    cryptography \
    pyOpenSSL

############################### MAVROS ######################################
RUN wget https://raw.githubusercontent.com/mavlink/mavros/master/mavros/scripts/install_geographiclib_datasets.sh \
    && sudo bash ./install_geographiclib_datasets.sh  

RUN echo "root ALL=(ALL)  ALL" >> /etc/sudoers \
    && echo "source /opt/ros/${ROS_DISTRO}/setup.bash" >> ${HOME}/.bashrc 

ENV XLA_PYTHON_CLIENT_PREALLOCATE=false
ENV HF_HUB_ENABLE_HF_TRANSFER=1